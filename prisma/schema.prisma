// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  password   String
  name       String
  role       Role     @default(STUDENT)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  enrollments Enrollment[]
  createdCourses Course[]
}

model Course {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  status      CourseStatus @default(DRAFT)
  creatorId   Int
  creator     User     @relation(fields: [creatorId], references: [id])
  lessons     Lesson[]
  enrollments Enrollment[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Lesson {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  order     Int
  courseId  Int
  course    Course   @relation(fields: [courseId], references: [id])
  progress  Progress[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Enrollment {
  id         Int      @id @default(autoincrement())
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  courseId   Int
  course     Course   @relation(fields: [courseId], references: [id])
  status     EnrollmentStatus @default(ACTIVE)
  enrolledAt DateTime @default(now())
  progress   Progress[]
}

model Progress {
  id           Int      @id @default(autoincrement())
  enrollmentId Int
  enrollment   Enrollment @relation(fields: [enrollmentId], references: [id])
  lessonId     Int
  lesson       Lesson   @relation(fields: [lessonId], references: [id])
  completed    Boolean  @default(false)
  completedAt  DateTime?
}

enum Role {
  STUDENT
  INSTRUCTOR
  ADMIN
}

enum CourseStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

enum EnrollmentStatus {
  ACTIVE
  COMPLETED
  DROPPED
}
